name: deployment-churn

{{$churn := DefaultParam .CL2_REPEATS 4}}  # Poorly named but there are four churns
{{$endpointSize :=  DefaultParam .CL2_ENDPOINT_SIZE 5000}}
{{$serviceSize := DefaultParam .CL2_SERVICE_SIZE 10}}
{{$namespaces := 1}}
{{$loadTestThroughput := DefaultParam .CL2_LOAD_TEST_THROUGHPUT 1000}}

{{$latencyPodImage := DefaultParam .CL2_LATENCY_POD_IMAGE "mcr.microsoft.com/oss/kubernetes/pause:3.6"}}
{{$latencyPodCpu := DefaultParam .CL2_LATENCY_POD_CPU 10}} #mCPU
{{$latencyPodMemory := DefaultParam .CL2_LATENCY_POD_MEMORY 50}} #MB

# {{$podStartupLatencyThreshold := DefaultParam .CL2_POD_STARTUP_LATENCY_THRESHOLD "60s"}}
# {{$podsPerNamespace := DivideInt $totalPods $namespaces}}
# {{$deploymentsPerNamespace := DivideInt $podsPerNamespace $deploymentSize}}
{{$90percentEndpoints:= MultiplyInt 0.9 $endpointSize}}
{{$80percentPod:= MultiplyInt 0.8 $endpointSize}}
{{$50percentPod:= MultiplyInt 0.5 $endpointSize}}

# {{$deploymentQPS := DivideFloat $loadTestThroughput $deploymentSize}}
{{$defaultQPS := DefaultParam .CL2_DEFAULT_QPS 1000}}

namespace:
  number: {{$namespaces}} # testing everything in one namespace
  deleteStaleNamespaces: true
  deleteAutomanagedNamespaces: false
  enableExistingNamespaces: false

tuningSets:
  - name: Sequence
    parallelismLimitedLoad:
      parallelismLimit: 1
  # TODO(https://github.com/kubernetes/perf-tests/issues/1024): This TuningSet is used only for pod-startup-latency, get rid of it
  # Uniform5qps: for each running phase, use 5 qps.
  - name: Uniform5qps
    qpsLoad:
      qps: 5
  # default is a tuningset that is meant to be used when we don't have any specific requirements on pace of operations.
  - name: default
    globalQPSLoad:
      qps: {{$defaultQPS}}
      burst: 1

steps:
  - name: Log - nodes={{.Nodes}}, namespaces={{$namespaces}}, totalPods={{$totalPods}},deploymentQPS={{$deploymentQPS}}, churn={{$churn}}, serviceSize={{$serviceSize}}
    measurements:
    - Identifier: Dummy
      Method: Sleep
      Params:
        action: start
        duration: 1ms
  
  - module:
      path: large-config-service.yaml
      params:
        actionName: "Creating"
        namespaces: {{$namespaces}}
        replicasPerNamespace: {{$serviceSize}}
        objectTemplatePath: service-noselector.yaml

  {{range $i := Loop $churn}}

  - name: Waiting for latency pods to be running - iteration {{$i}}
    measurements:
      - Identifier: WaitForRunningLatencyDeployments
        Method: WaitForControlledPodsRunning
        Params:
          action: gather
  {{ if gt $i 0}}
  - name: Sleep for 5s before deleting pods - iteration {{$i}}
    measurements:
    - Identifier: sleep
      Method: Sleep
      Params:
        duration: 5s
  {{ if eq $i 1 }}
  - name: Deleting {{$90percentPod}} Deployments - iteration {{$i}}
    phases:
      - namespaceRange:
          min: 1
          max: {{$namespaces}}
        replicasPerNamespace: {{ $90percentPod }}
  {{ end }}
  {{ if eq $i 2 }}
  - name: Deleting {{$80percentPod}} Deployments - iteration {{$i}}
    phases:
      - namespaceRange:
          min: 1
          max: {{$namespaces}}
        replicasPerNamespace: {{ $80percentPod }}
  {{ end }}
  {{ if eq $i 3 }}
  - name: Deleting {{$50percentPod}} Deployments - iteration {{$i}}
    phases:
      - namespaceRange:
          min: 1
          max: {{$namespaces}}
        replicasPerNamespace: {{ $50percentPod }}
  {{ end }}
        tuningSet: DeploymentCreateQps
        objectBundle:
          - basename: deployment-churn
            objectTemplatePath: simple-deployment.yaml
  - name: Waiting for latency pods to be deleted - iteration {{$i}}
    measurements:
      - Identifier: WaitForRunningLatencyDeployments
        Method: WaitForControlledPodsRunning
        Params:
          action: gather
  {{end}}
  {{end}}

  - name: Collecting measurements
    measurements:
      - Identifier: PodStartupLatency
        Method: PodStartupLatency
        Params:
          action: gather